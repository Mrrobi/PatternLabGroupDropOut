{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Cross_validation_random_forest_kmer_dnc","provenance":[{"file_id":"1oe70DSheasp76r-py6vnn9EotiPQpgZf","timestamp":1599576791927},{"file_id":"18_WorqQZJXVfsQ5LtPEarhQc6owMNPxO","timestamp":1599568697122},{"file_id":"17iSkHm0p7PRZemLd9FvkZV4jNzcw8o-s","timestamp":1599500090805}],"collapsed_sections":[],"mount_file_id":"1W739Vp2SUxY5q0KTLN_twkNPWiN7yPcX","authorship_tag":"ABX9TyNTo5WpcoJCVQU13bo24nRy"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"42QExKEoQKf_","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599576885182,"user_tz":-360,"elapsed":1583,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["from sklearn.model_selection import train_test_split\n","import numpy as np\n","from sklearn.svm import SVC\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import KFold\n","from sklearn.ensemble import RandomForestClassifier"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZJuW8MrJQsmP","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599577059258,"user_tz":-360,"elapsed":7172,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["pos_5289 = \"/content/drive/My Drive/fasta dataset/A.thaliana5289_pos/kmer2/A.thaliana5289_pos_kmer_dnc_2.npy\"\n","neg_5289 = \"/content/drive/My Drive/fasta dataset/A.thaliana5289_neg/kmer2/A.thaliana5289_neg_kmer_dnc.npy\"\n","pos_1000 = \"/content/drive/My Drive/fasta dataset/A.thaliana1000indep_pos/kmer2/A.thaliana1000indep_pos_kmer_dnc.npy\"\n","neg_1000 = \"/content/drive/My Drive/fasta dataset/A.thaliana1000indep_neg/kmer_dnc/A.thaliana1000indep_neg_kmer_dnc.npy\"\n","\n","x_train_pos = np.load(pos_5289) \n","x_train_neg = np.load(neg_5289) \n","x_test_pos = np.load(pos_1000) \n","x_test_neg = np.load(neg_1000) \n","\n","y_train_pos = np.tile(1, 5289) \n","y_train_neg = np.tile(0, 5289) \n","y_test_pos = np.tile(1, 1000) \n","y_test_neg = np.tile(0, 1000) "],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"JgHs0GdIfCEc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1599577089999,"user_tz":-360,"elapsed":1038,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"b4c13721-801f-4b04-9725-cc713ad00064"},"source":["print(x_test_neg.shape)\n","print(y_test_neg.shape)\n","print(x_train_neg.shape)\n","print(y_train_neg.shape)\n","\n","print(x_test_pos.shape)\n","print(y_test_pos.shape)\n","print(x_train_pos.shape)\n","print(y_train_pos.shape)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["(1000, 16)\n","(1000,)\n","(5289, 16)\n","(5289,)\n","(1000, 16)\n","(1000,)\n","(5289, 16)\n","(5289,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dn6yh4z1Q34j","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599577174080,"user_tz":-360,"elapsed":1055,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["x_training = np.concatenate((x_train_pos, x_train_neg), axis = 0)\n","y_training = np.concatenate((y_train_pos, y_train_neg))\n","\n","x_test = np.concatenate((x_test_pos, x_test_neg), axis = 0)\n","y_test = np.concatenate((y_test_pos, y_test_neg))"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"VifFHQVbfYnq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1599569030363,"user_tz":-360,"elapsed":1279,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"2286a18e-7a2d-4e65-ad62-ea3942308afb"},"source":["print(x_test.shape)\n","print(y_test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(2000, 64)\n","(2000,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AG55N_UQQ_1M","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599577339459,"user_tz":-360,"elapsed":2409,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["seed = 40\n","np.random.seed(seed)\n","\n","kf = KFold(n_splits=5, random_state=seed, shuffle=True)"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"EzE29b7Vfx01","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1599577670428,"user_tz":-360,"elapsed":147620,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"b6929397-ab2c-4c12-8d46-d5a74da701d9"},"source":["#fix estimator part 1\n","test_avg_list = []\n","\n","for c in range(50,501,50):\n","  test_avg = 0\n","\n","  print(f'for n_estimators = {c}:')\n","\n","  clf = RandomForestClassifier(n_estimators = c, max_depth = None)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":8,"outputs":[{"output_type":"stream","text":["for n_estimators = 50:\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.6315\n","train_accuracy :  1.0 \tVal accuracy :  0.9910207939508506 \tTest accuracy :  0.722\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.6275\n","train_accuracy :  1.0 \tVal accuracy :  0.9877068557919622 \tTest accuracy :  0.674\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.6975\n","Avg test accuracy for that c is = 0.6705\n","\n","for n_estimators = 100:\n","train_accuracy :  1.0 \tVal accuracy :  0.9905482041587902 \tTest accuracy :  0.675\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.755\n","train_accuracy :  1.0 \tVal accuracy :  0.9858223062381852 \tTest accuracy :  0.6775\n","train_accuracy :  1.0 \tVal accuracy :  0.9895981087470449 \tTest accuracy :  0.6295\n","train_accuracy :  1.0 \tVal accuracy :  0.9891252955082742 \tTest accuracy :  0.644\n","Avg test accuracy for that c is = 0.6762\n","\n","for n_estimators = 150:\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.7145\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.7085\n","train_accuracy :  1.0 \tVal accuracy :  0.9877126654064272 \tTest accuracy :  0.6625\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.693\n","train_accuracy :  1.0 \tVal accuracy :  0.9895981087470449 \tTest accuracy :  0.7035\n","Avg test accuracy for that c is = 0.6964\n","\n","for n_estimators = 200:\n","train_accuracy :  1.0 \tVal accuracy :  0.9910207939508506 \tTest accuracy :  0.716\n","train_accuracy :  1.0 \tVal accuracy :  0.9919659735349716 \tTest accuracy :  0.727\n","train_accuracy :  1.0 \tVal accuracy :  0.9867674858223062 \tTest accuracy :  0.653\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.638\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.6965\n","Avg test accuracy for that c is = 0.6860999999999999\n","\n","for n_estimators = 250:\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.7315\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.6575\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.6705\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.6975\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.6765\n","Avg test accuracy for that c is = 0.6866999999999999\n","\n","for n_estimators = 300:\n","train_accuracy :  1.0 \tVal accuracy :  0.9877126654064272 \tTest accuracy :  0.698\n","train_accuracy :  1.0 \tVal accuracy :  0.9919659735349716 \tTest accuracy :  0.7015\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.698\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.6635\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.6805\n","Avg test accuracy for that c is = 0.6883\n","\n","for n_estimators = 350:\n","train_accuracy :  1.0 \tVal accuracy :  0.9867674858223062 \tTest accuracy :  0.6995\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.6395\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.6675\n","train_accuracy :  1.0 \tVal accuracy :  0.9919621749408983 \tTest accuracy :  0.642\n","train_accuracy :  1.0 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.721\n","Avg test accuracy for that c is = 0.6738999999999999\n","\n","for n_estimators = 400:\n","train_accuracy :  1.0 \tVal accuracy :  0.9900756143667296 \tTest accuracy :  0.7125\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.6845\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.65\n","train_accuracy :  1.0 \tVal accuracy :  0.9919621749408983 \tTest accuracy :  0.6875\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.657\n","Avg test accuracy for that c is = 0.6783\n","\n","for n_estimators = 450:\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.695\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.6645\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.616\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.708\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.684\n","Avg test accuracy for that c is = 0.6735\n","\n","for n_estimators = 500:\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.7305\n","train_accuracy :  1.0 \tVal accuracy :  0.9914933837429112 \tTest accuracy :  0.6695\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.651\n","train_accuracy :  1.0 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.7425\n","train_accuracy :  1.0 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.6905\n","Avg test accuracy for that c is = 0.6968000000000001\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"TTFKt4WRmRl3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":833},"executionInfo":{"status":"ok","timestamp":1599578502296,"user_tz":-360,"elapsed":167634,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"452a0b04-5672-4301-f149-6bd42960b3a6"},"source":["#fix estimator part 2\n","test_avg_list = []\n","\n","for c in range(500,551,10):\n","  test_avg = 0\n","\n","  print(f'for n_estimators = {c}:')\n","\n","  clf = RandomForestClassifier(n_estimators = c, max_depth = None)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":9,"outputs":[{"output_type":"stream","text":["for n_estimators = 500:\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.694\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.671\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.653\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.6645\n","train_accuracy :  1.0 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.7055\n","Avg test accuracy for that c is = 0.6776\n","\n","for n_estimators = 510:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.7005\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.6665\n","train_accuracy :  1.0 \tVal accuracy :  0.9877126654064272 \tTest accuracy :  0.64\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.669\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.689\n","Avg test accuracy for that c is = 0.673\n","\n","for n_estimators = 520:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.6995\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.6725\n","train_accuracy :  1.0 \tVal accuracy :  0.9872400756143668 \tTest accuracy :  0.6695\n","train_accuracy :  1.0 \tVal accuracy :  0.992434988179669 \tTest accuracy :  0.6885\n","train_accuracy :  1.0 \tVal accuracy :  0.9895981087470449 \tTest accuracy :  0.6855\n","Avg test accuracy for that c is = 0.6830999999999999\n","\n","for n_estimators = 530:\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.7055\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.6955\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.633\n","train_accuracy :  1.0 \tVal accuracy :  0.992434988179669 \tTest accuracy :  0.6625\n","train_accuracy :  1.0 \tVal accuracy :  0.9891252955082742 \tTest accuracy :  0.675\n","Avg test accuracy for that c is = 0.6743\n","\n","for n_estimators = 540:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.7175\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.6795\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.659\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.6875\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.7035\n","Avg test accuracy for that c is = 0.6894\n","\n","for n_estimators = 550:\n","train_accuracy :  1.0 \tVal accuracy :  0.9877126654064272 \tTest accuracy :  0.723\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.671\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.676\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.6855\n","train_accuracy :  1.0 \tVal accuracy :  0.992434988179669 \tTest accuracy :  0.691\n","Avg test accuracy for that c is = 0.6893\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yaytydwznA_O","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1599578899498,"user_tz":-360,"elapsed":292454,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"5fb66ffa-2631-4da5-f64b-6e710ecf3b7e"},"source":["#fix estimator part 3\n","test_avg_list = []\n","c = 11\n","for c in range(540,550,1):\n","  test_avg = 0\n","\n","  print(f'for n_estimetors = {c}:')\n","\n","  clf = RandomForestClassifier(n_estimators = c, max_depth = None)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":10,"outputs":[{"output_type":"stream","text":["for n_estimetors = 540:\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.7155\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.6665\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.6395\n","train_accuracy :  1.0 \tVal accuracy :  0.9919621749408983 \tTest accuracy :  0.674\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.681\n","Avg test accuracy for that c is = 0.6753\n","\n","for n_estimetors = 541:\n","train_accuracy :  1.0 \tVal accuracy :  0.9900756143667296 \tTest accuracy :  0.7405\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.679\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.624\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.6875\n","train_accuracy :  1.0 \tVal accuracy :  0.9886524822695035 \tTest accuracy :  0.7125\n","Avg test accuracy for that c is = 0.6887000000000001\n","\n","for n_estimetors = 542:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.711\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.677\n","train_accuracy :  1.0 \tVal accuracy :  0.9877126654064272 \tTest accuracy :  0.66\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.7005\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.682\n","Avg test accuracy for that c is = 0.6860999999999999\n","\n","for n_estimetors = 543:\n","train_accuracy :  1.0 \tVal accuracy :  0.9900756143667296 \tTest accuracy :  0.728\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.666\n","train_accuracy :  1.0 \tVal accuracy :  0.9877126654064272 \tTest accuracy :  0.6655\n","train_accuracy :  1.0 \tVal accuracy :  0.9891252955082742 \tTest accuracy :  0.678\n","train_accuracy :  1.0 \tVal accuracy :  0.9895981087470449 \tTest accuracy :  0.692\n","Avg test accuracy for that c is = 0.6859\n","\n","for n_estimetors = 544:\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.719\n","train_accuracy :  1.0 \tVal accuracy :  0.9919659735349716 \tTest accuracy :  0.6915\n","train_accuracy :  1.0 \tVal accuracy :  0.9905482041587902 \tTest accuracy :  0.6395\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.66\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.685\n","Avg test accuracy for that c is = 0.679\n","\n","for n_estimetors = 545:\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.7175\n","train_accuracy :  1.0 \tVal accuracy :  0.9914933837429112 \tTest accuracy :  0.677\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.6495\n","train_accuracy :  1.0 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.705\n","train_accuracy :  1.0 \tVal accuracy :  0.9895981087470449 \tTest accuracy :  0.681\n","Avg test accuracy for that c is = 0.686\n","\n","for n_estimetors = 546:\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.703\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.6555\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.649\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.6875\n","train_accuracy :  1.0 \tVal accuracy :  0.9886524822695035 \tTest accuracy :  0.6845\n","Avg test accuracy for that c is = 0.6759\n","\n","for n_estimetors = 547:\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.7215\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.689\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.6525\n","train_accuracy :  1.0 \tVal accuracy :  0.9919621749408983 \tTest accuracy :  0.6735\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.682\n","Avg test accuracy for that c is = 0.6836999999999999\n","\n","for n_estimetors = 548:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.7175\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.67\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.6285\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.6965\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.6945\n","Avg test accuracy for that c is = 0.6814\n","\n","for n_estimetors = 549:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.7065\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.665\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.654\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.692\n","train_accuracy :  1.0 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.674\n","Avg test accuracy for that c is = 0.6783\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nA68mgNlAP_3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1599579846301,"user_tz":-360,"elapsed":561261,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"73ddf096-b6f0-4dd0-8146-86ad595640f9"},"source":["#fix maxdepth part 1\n","test_avg_list = []\n","c = 11\n","for c in range(5,101,5):\n","  test_avg = 0\n","\n","  print(f'for max_depth = {c}:')\n","\n","  clf = RandomForestClassifier(n_estimators = 541, max_depth = c)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":11,"outputs":[{"output_type":"stream","text":["for max_depth = 5:\n","train_accuracy :  0.9263767430867407 \tVal accuracy :  0.9106805293005671 \tTest accuracy :  0.751\n","train_accuracy :  0.9287402505317892 \tVal accuracy :  0.9362003780718336 \tTest accuracy :  0.728\n","train_accuracy :  0.934294493027653 \tVal accuracy :  0.9196597353497165 \tTest accuracy :  0.697\n","train_accuracy :  0.9270944109653787 \tVal accuracy :  0.9267139479905437 \tTest accuracy :  0.738\n","train_accuracy :  0.9282760250502186 \tVal accuracy :  0.9101654846335697 \tTest accuracy :  0.743\n","Avg test accuracy for that c is = 0.7314\n","\n","for max_depth = 10:\n","train_accuracy :  0.9957456865989128 \tVal accuracy :  0.9782608695652174 \tTest accuracy :  0.72\n","train_accuracy :  0.9965729142046797 \tVal accuracy :  0.9877126654064272 \tTest accuracy :  0.702\n","train_accuracy :  0.9968092649491845 \tVal accuracy :  0.9792060491493384 \tTest accuracy :  0.683\n","train_accuracy :  0.9953917050691244 \tVal accuracy :  0.9815602836879432 \tTest accuracy :  0.705\n","train_accuracy :  0.9953917050691244 \tVal accuracy :  0.9825059101654846 \tTest accuracy :  0.7245\n","Avg test accuracy for that c is = 0.7069\n","\n","for max_depth = 15:\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.731\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.6705\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.6655\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.7\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.6945\n","Avg test accuracy for that c is = 0.6923000000000001\n","\n","for max_depth = 20:\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.6715\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.652\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.667\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.712\n","train_accuracy :  1.0 \tVal accuracy :  0.9895981087470449 \tTest accuracy :  0.691\n","Avg test accuracy for that c is = 0.6787\n","\n","for max_depth = 25:\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.7235\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.691\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.6635\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.682\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.6665\n","Avg test accuracy for that c is = 0.6853\n","\n","for max_depth = 30:\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.7205\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.6805\n","train_accuracy :  1.0 \tVal accuracy :  0.9877126654064272 \tTest accuracy :  0.689\n","train_accuracy :  1.0 \tVal accuracy :  0.9919621749408983 \tTest accuracy :  0.679\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.67\n","Avg test accuracy for that c is = 0.6878\n","\n","for max_depth = 35:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.75\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.6925\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.6675\n","train_accuracy :  1.0 \tVal accuracy :  0.9919621749408983 \tTest accuracy :  0.713\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.671\n","Avg test accuracy for that c is = 0.6988\n","\n","for max_depth = 40:\n","train_accuracy :  1.0 \tVal accuracy :  0.9900756143667296 \tTest accuracy :  0.7065\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.6745\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.641\n","train_accuracy :  1.0 \tVal accuracy :  0.9919621749408983 \tTest accuracy :  0.6665\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.6855\n","Avg test accuracy for that c is = 0.6748000000000001\n","\n","for max_depth = 45:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.698\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.673\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.6505\n","train_accuracy :  1.0 \tVal accuracy :  0.992434988179669 \tTest accuracy :  0.7\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.6805\n","Avg test accuracy for that c is = 0.6803999999999999\n","\n","for max_depth = 50:\n","train_accuracy :  1.0 \tVal accuracy :  0.9872400756143668 \tTest accuracy :  0.703\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.7095\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.661\n","train_accuracy :  1.0 \tVal accuracy :  0.992434988179669 \tTest accuracy :  0.6915\n","train_accuracy :  1.0 \tVal accuracy :  0.992434988179669 \tTest accuracy :  0.7005\n","Avg test accuracy for that c is = 0.6931\n","\n","for max_depth = 55:\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.6935\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.699\n","train_accuracy :  1.0 \tVal accuracy :  0.9881852551984878 \tTest accuracy :  0.6595\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.645\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.6825\n","Avg test accuracy for that c is = 0.6759000000000001\n","\n","for max_depth = 60:\n","train_accuracy :  1.0 \tVal accuracy :  0.9877126654064272 \tTest accuracy :  0.72\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.678\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.6395\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.7045\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.695\n","Avg test accuracy for that c is = 0.6874\n","\n","for max_depth = 65:\n","train_accuracy :  1.0 \tVal accuracy :  0.9872400756143668 \tTest accuracy :  0.702\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.672\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.654\n","train_accuracy :  1.0 \tVal accuracy :  0.9919621749408983 \tTest accuracy :  0.6985\n","train_accuracy :  1.0 \tVal accuracy :  0.992434988179669 \tTest accuracy :  0.6815\n","Avg test accuracy for that c is = 0.6816000000000001\n","\n","for max_depth = 70:\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.6925\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.662\n","train_accuracy :  1.0 \tVal accuracy :  0.9877126654064272 \tTest accuracy :  0.674\n","train_accuracy :  1.0 \tVal accuracy :  0.9900709219858156 \tTest accuracy :  0.684\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.6825\n","Avg test accuracy for that c is = 0.679\n","\n","for max_depth = 75:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.7135\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.6645\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.6365\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.663\n","train_accuracy :  1.0 \tVal accuracy :  0.9895981087470449 \tTest accuracy :  0.715\n","Avg test accuracy for that c is = 0.6785\n","\n","for max_depth = 80:\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.719\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.7\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.6485\n","train_accuracy :  1.0 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.672\n","train_accuracy :  1.0 \tVal accuracy :  0.9914893617021276 \tTest accuracy :  0.688\n","Avg test accuracy for that c is = 0.6855\n","\n","for max_depth = 85:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.7005\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.691\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.6185\n","train_accuracy :  1.0 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.6715\n","train_accuracy :  1.0 \tVal accuracy :  0.992434988179669 \tTest accuracy :  0.7095\n","Avg test accuracy for that c is = 0.6782\n","\n","for max_depth = 90:\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.7275\n","train_accuracy :  1.0 \tVal accuracy :  0.9919659735349716 \tTest accuracy :  0.6825\n","train_accuracy :  1.0 \tVal accuracy :  0.9891304347826086 \tTest accuracy :  0.664\n","train_accuracy :  1.0 \tVal accuracy :  0.9919621749408983 \tTest accuracy :  0.6995\n","train_accuracy :  1.0 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.6725\n","Avg test accuracy for that c is = 0.6892\n","\n","for max_depth = 95:\n","train_accuracy :  1.0 \tVal accuracy :  0.9896030245746692 \tTest accuracy :  0.7115\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.6675\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.6495\n","train_accuracy :  1.0 \tVal accuracy :  0.9919621749408983 \tTest accuracy :  0.686\n","train_accuracy :  1.0 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.6675\n","Avg test accuracy for that c is = 0.6764\n","\n","for max_depth = 100:\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.7075\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.6965\n","train_accuracy :  1.0 \tVal accuracy :  0.9886578449905482 \tTest accuracy :  0.6485\n","train_accuracy :  1.0 \tVal accuracy :  0.992434988179669 \tTest accuracy :  0.6785\n","train_accuracy :  1.0 \tVal accuracy :  0.991016548463357 \tTest accuracy :  0.7085\n","Avg test accuracy for that c is = 0.6879\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"032qYnLmCyoh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":697},"executionInfo":{"status":"ok","timestamp":1599580377411,"user_tz":-360,"elapsed":489,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"1550b07b-447f-46e1-8554-429afb6b39e4"},"source":["#fix maxdepth part 2\n","test_avg_list = []\n","c = 11\n","for c in range(5,10,1):\n","  test_avg = 0\n","\n","  print(f'for max_depth = {c}:')\n","\n","  clf = RandomForestClassifier(n_estimators = 403, max_depth = c)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":12,"outputs":[{"output_type":"stream","text":["for max_depth = 5:\n","train_accuracy :  0.9276766721815174 \tVal accuracy :  0.9144612476370511 \tTest accuracy :  0.7445\n","train_accuracy :  0.9282675490427795 \tVal accuracy :  0.9343100189035917 \tTest accuracy :  0.712\n","train_accuracy :  0.9314582840935949 \tVal accuracy :  0.9191871455576559 \tTest accuracy :  0.6975\n","train_accuracy :  0.9259127968805388 \tVal accuracy :  0.9238770685579196 \tTest accuracy :  0.7415\n","train_accuracy :  0.9282760250502186 \tVal accuracy :  0.9115839243498818 \tTest accuracy :  0.7355\n","Avg test accuracy for that c is = 0.7262000000000001\n","\n","for max_depth = 6:\n","train_accuracy :  0.945757504136138 \tVal accuracy :  0.9343100189035917 \tTest accuracy :  0.7455\n","train_accuracy :  0.9516662727487591 \tVal accuracy :  0.9508506616257089 \tTest accuracy :  0.739\n","train_accuracy :  0.9535570787047979 \tVal accuracy :  0.943289224952741 \tTest accuracy :  0.698\n","train_accuracy :  0.9529717594233723 \tVal accuracy :  0.9442080378250591 \tTest accuracy :  0.739\n","train_accuracy :  0.9515538225215645 \tVal accuracy :  0.9361702127659575 \tTest accuracy :  0.7425\n","Avg test accuracy for that c is = 0.7328\n","\n","for max_depth = 7:\n","train_accuracy :  0.9670290711415741 \tVal accuracy :  0.9499054820415879 \tTest accuracy :  0.7495\n","train_accuracy :  0.9685653509808556 \tVal accuracy :  0.9636105860113422 \tTest accuracy :  0.7385\n","train_accuracy :  0.9692744032143701 \tVal accuracy :  0.9565217391304348 \tTest accuracy :  0.7165\n","train_accuracy :  0.9686872267517429 \tVal accuracy :  0.9560283687943263 \tTest accuracy :  0.758\n","train_accuracy :  0.967623774075387 \tVal accuracy :  0.9494089834515367 \tTest accuracy :  0.725\n","Avg test accuracy for that c is = 0.7375\n","\n","for max_depth = 8:\n","train_accuracy :  0.9803828882060979 \tVal accuracy :  0.9631379962192816 \tTest accuracy :  0.7415\n","train_accuracy :  0.9823918695343891 \tVal accuracy :  0.9768431001890359 \tTest accuracy :  0.683\n","train_accuracy :  0.9823918695343891 \tVal accuracy :  0.9678638941398866 \tTest accuracy :  0.7015\n","train_accuracy :  0.9823939501358856 \tVal accuracy :  0.9725768321513002 \tTest accuracy :  0.745\n","train_accuracy :  0.9810941746425618 \tVal accuracy :  0.9607565011820332 \tTest accuracy :  0.7155\n","Avg test accuracy for that c is = 0.7173\n","\n","for max_depth = 9:\n","train_accuracy :  0.9909004963365634 \tVal accuracy :  0.974007561436673 \tTest accuracy :  0.7515\n","train_accuracy :  0.9909004963365634 \tVal accuracy :  0.9829867674858223 \tTest accuracy :  0.7105\n","train_accuracy :  0.9906641455920586 \tVal accuracy :  0.9777882797731569 \tTest accuracy :  0.6995\n","train_accuracy :  0.9910197329552168 \tVal accuracy :  0.9782505910165484 \tTest accuracy :  0.7095\n","train_accuracy :  0.9913742171806688 \tVal accuracy :  0.9754137115839243 \tTest accuracy :  0.7185\n","Avg test accuracy for that c is = 0.7179000000000001\n","\n"],"name":"stdout"}]}]}