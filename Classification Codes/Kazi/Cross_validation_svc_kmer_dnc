{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Cross_validation_svc_kmer_dnc","provenance":[],"collapsed_sections":[],"mount_file_id":"17iSkHm0p7PRZemLd9FvkZV4jNzcw8o-s","authorship_tag":"ABX9TyPSYeC9VcR0Y/7hVLJSil72"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"42QExKEoQKf_","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599581080954,"user_tz":-360,"elapsed":2189,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["from sklearn.model_selection import train_test_split\n","import numpy as np\n","from sklearn.svm import SVC\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import KFold"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZJuW8MrJQsmP","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599581090388,"user_tz":-360,"elapsed":7379,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["pos_5289 = \"/content/drive/My Drive/fasta dataset/A.thaliana5289_pos/kmer2/A.thaliana5289_pos_kmer_dnc_2.npy\"\n","neg_5289 = \"/content/drive/My Drive/fasta dataset/A.thaliana5289_neg/kmer2/A.thaliana5289_neg_kmer_dnc.npy\"\n","pos_1000 = \"/content/drive/My Drive/fasta dataset/A.thaliana1000indep_pos/kmer2/A.thaliana1000indep_pos_kmer_dnc.npy\"\n","neg_1000 = \"/content/drive/My Drive/fasta dataset/A.thaliana1000indep_neg/kmer_dnc/A.thaliana1000indep_neg_kmer_dnc.npy\"\n","\n","x_train_pos = np.load(pos_5289) \n","x_train_neg = np.load(neg_5289) \n","x_test_pos = np.load(pos_1000) \n","x_test_neg = np.load(neg_1000) \n","\n","y_train_pos = np.tile(1, 5289) \n","y_train_neg = np.tile(0, 5289) \n","y_test_pos = np.tile(1, 1000) \n","y_test_neg = np.tile(0, 1000) "],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"JgHs0GdIfCEc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1599539873369,"user_tz":-360,"elapsed":10027,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"900c442b-57ee-43ff-df52-65523d4c4bb2"},"source":["print(x_test_neg.shape)\n","print(y_test_neg.shape)\n","print(x_train_neg.shape)\n","print(y_train_neg.shape)\n","\n","print(x_test_pos.shape)\n","print(y_test_pos.shape)\n","print(x_train_pos.shape)\n","print(y_train_pos.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(1000, 16)\n","(1000,)\n","(5289, 16)\n","(5289,)\n","(1000, 16)\n","(1000,)\n","(5289, 16)\n","(5289,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dn6yh4z1Q34j","colab_type":"code","colab":{}},"source":["x_training = np.concatenate((x_train_pos, x_train_neg), axis = 0)\n","y_training = np.concatenate((y_train_pos, y_train_neg))\n","\n","x_test = np.concatenate((x_test_pos, x_test_neg), axis = 0)\n","y_test = np.concatenate((y_test_pos, y_test_neg))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VifFHQVbfYnq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"executionInfo":{"status":"ok","timestamp":1599539873372,"user_tz":-360,"elapsed":10012,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"40d1cd6a-8b4c-4ce9-90cb-8ff13f8dfb74"},"source":["print(x_test.shape)\n","print(y_test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(2000, 16)\n","(2000,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AG55N_UQQ_1M","colab_type":"code","colab":{}},"source":["seed = 40\n","np.random.seed(seed)\n","\n","kf = KFold(n_splits=5, random_state=seed, shuffle=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EzE29b7Vfx01","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1599539929879,"user_tz":-360,"elapsed":66490,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"f41155b1-30bf-47ff-f25e-101ff0609265"},"source":["test_avg_list = []\n","\n","for c in range(1,100,10):\n","  test_avg = 0\n","\n","  print(f'for c = {c}:')\n","\n","  clf = SVC(C=c,  random_state = seed)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["for c = 1:\n","train_accuracy :  0.9961002127156701 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.91\n","train_accuracy :  0.9970456156936894 \tVal accuracy :  0.9914933837429112 \tTest accuracy :  0.9075\n","train_accuracy :  0.9963365634601749 \tVal accuracy :  0.9919659735349716 \tTest accuracy :  0.902\n","train_accuracy :  0.9966914805624483 \tVal accuracy :  0.9905437352245863 \tTest accuracy :  0.907\n","train_accuracy :  0.9963369963369964 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.9085\n","Avg test accuracy for that c is = 0.907\n","\n","for c = 11:\n","train_accuracy :  0.9998818246277476 \tVal accuracy :  0.9938563327032136 \tTest accuracy :  0.9035\n","train_accuracy :  0.9998818246277476 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.899\n","train_accuracy :  0.9997636492554951 \tVal accuracy :  0.9957466918714556 \tTest accuracy :  0.903\n","train_accuracy :  1.0 \tVal accuracy :  0.9929078014184397 \tTest accuracy :  0.903\n","train_accuracy :  0.999881838591516 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.9135\n","Avg test accuracy for that c is = 0.9044000000000001\n","\n","for c = 21:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.9\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.9938563327032136 \tTest accuracy :  0.91\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9053000000000001\n","\n","for c = 31:\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9095\n","train_accuracy :  1.0 \tVal accuracy :  0.9933806146572104 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.9115\n","Avg test accuracy for that c is = 0.905\n","\n","for c = 41:\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.9938563327032136 \tTest accuracy :  0.907\n","train_accuracy :  1.0 \tVal accuracy :  0.9943262411347518 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048\n","\n","for c = 51:\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.9005\n","train_accuracy :  1.0 \tVal accuracy :  0.9938563327032136 \tTest accuracy :  0.9075\n","train_accuracy :  1.0 \tVal accuracy :  0.9943262411347518 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048\n","\n","for c = 61:\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.9005\n","train_accuracy :  1.0 \tVal accuracy :  0.9938563327032136 \tTest accuracy :  0.9075\n","train_accuracy :  1.0 \tVal accuracy :  0.9943262411347518 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048\n","\n","for c = 71:\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.9005\n","train_accuracy :  1.0 \tVal accuracy :  0.9938563327032136 \tTest accuracy :  0.9075\n","train_accuracy :  1.0 \tVal accuracy :  0.9943262411347518 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048\n","\n","for c = 81:\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.9005\n","train_accuracy :  1.0 \tVal accuracy :  0.9938563327032136 \tTest accuracy :  0.9075\n","train_accuracy :  1.0 \tVal accuracy :  0.9943262411347518 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048\n","\n","for c = 91:\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.9005\n","train_accuracy :  1.0 \tVal accuracy :  0.9938563327032136 \tTest accuracy :  0.9075\n","train_accuracy :  1.0 \tVal accuracy :  0.9943262411347518 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"TTFKt4WRmRl3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1599539977210,"user_tz":-360,"elapsed":113794,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"c7618feb-bb7f-40a9-faaf-e5620efb850f"},"source":["test_avg_list = []\n","\n","for c in range(21,30,1):\n","  test_avg = 0\n","\n","  print(f'for c = {c}:')\n","\n","  clf = SVC(C=c,  random_state = seed)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["for c = 21:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.9\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.9938563327032136 \tTest accuracy :  0.91\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9053000000000001\n","\n","for c = 22:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.8995\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9085\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048999999999999\n","\n","for c = 23:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.9\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.909\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.903\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.905\n","\n","for c = 24:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.9005\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.9015\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9075\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.903\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.9115\n","Avg test accuracy for that c is = 0.9048\n","\n","for c = 25:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9085\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.903\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.9115\n","Avg test accuracy for that c is = 0.905\n","\n","for c = 26:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9085\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.911\n","Avg test accuracy for that c is = 0.905\n","\n","for c = 27:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9085\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.911\n","Avg test accuracy for that c is = 0.905\n","\n","for c = 28:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9085\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.903\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.9115\n","Avg test accuracy for that c is = 0.905\n","\n","for c = 29:\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.9929111531190926 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.909\n","train_accuracy :  1.0 \tVal accuracy :  0.9933806146572104 \tTest accuracy :  0.902\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.911\n","Avg test accuracy for that c is = 0.9048000000000002\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yaytydwznA_O","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1599540024637,"user_tz":-360,"elapsed":161207,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"eac1b078-ba8c-4e2d-945e-47c2e3ab0ec7"},"source":["test_avg_list = []\n","c = 21\n","for x in range(1,10,1):\n","  test_avg = 0\n","  c = c + .1\n","  print(f'for c = {c}:')\n","\n","  clf = SVC(C=c,  random_state = seed)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["for c = 21.1:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.9\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9095\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9052\n","\n","for c = 21.200000000000003:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.9\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.909\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9051\n","\n","for c = 21.300000000000004:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.8995\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.909\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.905\n","\n","for c = 21.400000000000006:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.9\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.909\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9051\n","\n","for c = 21.500000000000007:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.8995\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9085\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048999999999999\n","\n","for c = 21.60000000000001:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.8995\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9085\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048999999999999\n","\n","for c = 21.70000000000001:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.8995\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9085\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048999999999999\n","\n","for c = 21.80000000000001:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.8995\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9085\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048999999999999\n","\n","for c = 21.900000000000013:\n","train_accuracy :  1.0 \tVal accuracy :  0.9924385633270322 \tTest accuracy :  0.8995\n","train_accuracy :  1.0 \tVal accuracy :  0.9933837429111532 \tTest accuracy :  0.901\n","train_accuracy :  1.0 \tVal accuracy :  0.994328922495274 \tTest accuracy :  0.9085\n","train_accuracy :  1.0 \tVal accuracy :  0.9938534278959811 \tTest accuracy :  0.9035\n","train_accuracy :  1.0 \tVal accuracy :  0.9947990543735225 \tTest accuracy :  0.912\n","Avg test accuracy for that c is = 0.9048999999999999\n","\n"],"name":"stdout"}]}]}