{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Cross_validation_svc_kmer_tnc_dnc","provenance":[{"file_id":"18_WorqQZJXVfsQ5LtPEarhQc6owMNPxO","timestamp":1599567104200},{"file_id":"17iSkHm0p7PRZemLd9FvkZV4jNzcw8o-s","timestamp":1599500090805}],"collapsed_sections":[],"mount_file_id":"1O5SDPzRh7OywRpiGHi5O34T0tFaCauKt","authorship_tag":"ABX9TyO0X6NRtmn4+dTgoF5jAJ0M"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"42QExKEoQKf_","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599663018753,"user_tz":-360,"elapsed":2254,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["from sklearn.model_selection import train_test_split\n","import numpy as np\n","from sklearn.svm import SVC\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import KFold"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZJuW8MrJQsmP","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599663051149,"user_tz":-360,"elapsed":12721,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["a_pos_5289 = \"/content/drive/My Drive/fasta dataset/A.thaliana5289_pos/kmer3/A.thaliana5289_pos_kmer_tnc_3.npy\"\n","a_neg_5289 = \"/content/drive/My Drive/fasta dataset/A.thaliana5289_neg/kmer3/A.thaliana5289_neg_kmer_tnc.npy\"\n","a_pos_1000 = \"/content/drive/My Drive/fasta dataset/A.thaliana1000indep_pos/kmer3/A.thaliana1000indep_pos_kmer_tnc.npy\"\n","a_neg_1000 = \"/content/drive/My Drive/fasta dataset/A.thaliana1000indep_neg/kmer_tnc/A.thaliana1000indep_neg_kmer_tnc.npy\"\n","\n","a_x_train_pos = np.load(a_pos_5289) \n","a_x_train_neg = np.load(a_neg_5289) \n","a_x_test_pos = np.load(a_pos_1000) \n","a_x_test_neg = np.load(a_neg_1000) \n","\n","\n","b_pos_5289 = \"/content/drive/My Drive/fasta dataset/A.thaliana5289_pos/kmer2/A.thaliana5289_pos_kmer_dnc_2.npy\"\n","b_neg_5289 = \"/content/drive/My Drive/fasta dataset/A.thaliana5289_neg/kmer2/A.thaliana5289_neg_kmer_dnc.npy\"\n","b_pos_1000 = \"/content/drive/My Drive/fasta dataset/A.thaliana1000indep_pos/kmer2/A.thaliana1000indep_pos_kmer_dnc.npy\"\n","b_neg_1000 = \"/content/drive/My Drive/fasta dataset/A.thaliana1000indep_neg/kmer_dnc/A.thaliana1000indep_neg_kmer_dnc.npy\"\n","\n","b_x_train_pos = np.load(b_pos_5289) \n","b_x_train_neg = np.load(b_neg_5289) \n","b_x_test_pos = np.load(b_pos_1000) \n","b_x_test_neg = np.load(b_neg_1000) \n","\n","y_train_pos = np.tile(1, 5289) \n","y_train_neg = np.tile(0, 5289) \n","y_test_pos = np.tile(1, 1000) \n","y_test_neg = np.tile(0, 1000) "],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"JgHs0GdIfCEc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":306},"executionInfo":{"status":"ok","timestamp":1599665349664,"user_tz":-360,"elapsed":1181,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"1aafcfea-1b49-4c4e-fdb5-394978bdb948"},"source":["print(a_x_test_neg.shape)\n","print(y_test_neg.shape)\n","print(a_x_train_neg.shape)\n","print(y_train_neg.shape)\n","\n","print(a_x_test_pos.shape)\n","print(y_test_pos.shape)\n","print(a_x_train_pos.shape)\n","print(y_train_pos.shape)\n","\n","print()\n","print(b_x_test_neg.shape)\n","print(y_test_neg.shape)\n","print(b_x_train_neg.shape)\n","print(y_train_neg.shape)\n","\n","print(b_x_test_pos.shape)\n","print(y_test_pos.shape)\n","print(b_x_train_pos.shape)\n","print(y_train_pos.shape)"],"execution_count":24,"outputs":[{"output_type":"stream","text":["(1000, 64)\n","(1000,)\n","(5289, 64)\n","(5289,)\n","(1000, 64)\n","(1000,)\n","(5289, 64)\n","(5289,)\n","\n","(1000, 16)\n","(1000,)\n","(5289, 16)\n","(5289,)\n","(1000, 16)\n","(1000,)\n","(5289, 16)\n","(5289,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dn6yh4z1Q34j","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599663748416,"user_tz":-360,"elapsed":1241,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["a_x_training = np.concatenate((a_x_train_pos, a_x_train_neg), axis = 0)\n","a_x_test = np.concatenate((a_x_test_pos, a_x_test_neg), axis = 0)\n","\n","b_x_training = np.concatenate((b_x_train_pos, b_x_train_neg), axis = 0)\n","b_x_test = np.concatenate((b_x_test_pos, b_x_test_neg), axis = 0)\n","\n","y_training = np.concatenate((y_train_pos,y_train_neg))\n","y_test = np.concatenate((y_test_pos,y_test_neg))"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"VifFHQVbfYnq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"ok","timestamp":1599663751597,"user_tz":-360,"elapsed":1226,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"0d9b6cc3-9db6-4d18-b638-e711d981d8d9"},"source":["print(a_x_training.shape)\n","print(a_x_test.shape)\n","\n","print(b_x_training.shape)\n","print(b_x_test.shape)\n","\n","print()\n","print(y_test.shape)\n","print(y_training.shape)"],"execution_count":16,"outputs":[{"output_type":"stream","text":["(10578, 64)\n","(2000, 64)\n","(10578, 16)\n","(2000, 16)\n","\n","(2000,)\n","(10578,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"DzaOKf3XrXjQ","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599663755801,"user_tz":-360,"elapsed":1183,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["x_training = np.concatenate((a_x_training, b_x_training), axis = 1)\n","\n","x_test = np.concatenate((a_x_test, b_x_test), axis = 1)"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"pQonV0iGX1Sw","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1599663758412,"user_tz":-360,"elapsed":1174,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"91cdf9c7-36a5-41fe-c977-eb29de0a0c76"},"source":["print(x_training.shape)\n","print(x_test.shape)"],"execution_count":18,"outputs":[{"output_type":"stream","text":["(10578, 80)\n","(2000, 80)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AG55N_UQQ_1M","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1599663760951,"user_tz":-360,"elapsed":1181,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}}},"source":["seed = 40\n","np.random.seed(seed)\n","\n","kf = KFold(n_splits=5, random_state=seed, shuffle=True)"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"EzE29b7Vfx01","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1599664020885,"user_tz":-360,"elapsed":257559,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"e7aebac1-e16b-48d6-84f3-3dbddeab10a1"},"source":["test_avg_list = []\n","\n","for c in range(1,100,10):\n","  test_avg = 0\n","\n","  print(f'for c = {c}:')\n","\n","  clf = SVC(C=c,  random_state = seed)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":20,"outputs":[{"output_type":"stream","text":["for c = 1:\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.734\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.735\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.7285\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7325\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7395\n","Avg test accuracy for that c is = 0.7339\n","\n","for c = 11:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 21:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 31:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 41:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 51:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 61:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 71:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 81:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 91:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"TTFKt4WRmRl3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1599664489173,"user_tz":-360,"elapsed":258012,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"134eb0eb-e826-4c06-ac38-9f588c1b0f06"},"source":["test_avg_list = []\n","\n","for c in range(11,21,1):\n","  test_avg = 0\n","\n","  print(f'for c = {c}:')\n","\n","  clf = SVC(C=c,  random_state = seed)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":21,"outputs":[{"output_type":"stream","text":["for c = 11:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 12:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 13:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 14:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 15:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 16:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 17:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 18:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 19:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 20:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yaytydwznA_O","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1599665039390,"user_tz":-360,"elapsed":234588,"user":{"displayName":"Kazi Ferdous Mahin","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtCxuxVJXQasdKsNGE172mQbQgntjPLwlNnDsVGA=s64","userId":"07197529474479470395"}},"outputId":"a75b1f04-c476-429e-9d46-a7130bee5c60"},"source":["test_avg_list = []\n","c = 11\n","for x in range(1,10,1):\n","  test_avg = 0\n","  c = c + .1\n","  print(f'for c = {c}:')\n","\n","  clf = SVC(C=c,  random_state = seed)\n","  val_accuracy_list = []\n","  train_accuracy_list = []\n","  test_accuracy_list = []\n","\n","  for train_index, val_index in kf.split(x_training):\n","\n","    X_train, X_val = x_training[train_index], x_training[val_index]\n","    y_train, y_val = y_training[train_index], y_training[val_index]\n","    \n","    clf.fit(X_train, y_train)\n","\n","    y_val_pred = clf.predict(X_val)\n","    val_accuracy = accuracy_score(y_val, y_val_pred)\n","    val_accuracy_list.append(val_accuracy)\n","\n","    y_train_pred = clf.predict(X_train)\n","    train_accuracy = accuracy_score(y_train, y_train_pred)\n","    train_accuracy_list.append(train_accuracy)\n","\n","    y_test_pred = clf.predict(x_test)\n","    test_accuracy = accuracy_score(y_test, y_test_pred)\n","    test_avg = test_avg + test_accuracy\n","    test_accuracy_list.append(test_accuracy)\n","\n","  test_avg = test_avg/(len(test_accuracy_list))\n","  test_avg_list.append(test_avg)\n","\n","  for i in range(0, len(train_accuracy_list)):\n","    print(\"train_accuracy : \", train_accuracy_list[i], \"\\tVal accuracy : \", val_accuracy_list[i], \"\\tTest accuracy : \", test_accuracy_list[i])\n","  print(f'Avg test accuracy for that c is = {test_avg}')\n","  print()"],"execution_count":22,"outputs":[{"output_type":"stream","text":["for c = 11.1:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 11.2:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 11.299999999999999:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 11.399999999999999:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 11.499999999999998:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 11.599999999999998:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 11.699999999999998:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 11.799999999999997:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n","for c = 11.899999999999997:\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.743\n","train_accuracy :  1.0 \tVal accuracy :  1.0 \tTest accuracy :  0.7415\n","train_accuracy :  1.0 \tVal accuracy :  0.9995274102079396 \tTest accuracy :  0.741\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.738\n","train_accuracy :  1.0 \tVal accuracy :  0.9995271867612293 \tTest accuracy :  0.7495\n","Avg test accuracy for that c is = 0.7426\n","\n"],"name":"stdout"}]}]}